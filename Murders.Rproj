# Carrega o pacote e os dados
library(dslabs)
data(murders)

# Use os nomes das funções para extrair os nomes das variáveis
names(murders)

# Para acessar a variável de população do conjunto de dados de assassinatos, use este código
p <- murders$population

# Para determinar a classe do objeto `p` usamos este código:
class(p)

# Use o acessador para extrair abreviações de estado e atribuí-lo a "a"
a <- murders$abb

# Determina a classe de "a"
class(a)

#Extraímos a população assim:
p <- murders$population

# É assim que fazemos o mesmo com os colchetes:
o <- murders[["population"]]

# Podemos confirmar que esses dois são iguais
identical(p,o)

# Use colchetes para extrair `abb` de `assassinatos` e atribuí-lo a "b"
b <- murders[["abb"]]

# Verifique se `a` e `b` são idênticos
identical(a,b)

# Podemos ver a classe da variável 'region' usando class
class(murders$region)

# Determina o número de regiões incluídas nesta variável
length(levels(murders$region))

# A função `c()` conecta todas as strings dentro dela em um único vetor, que podemos atribuir a `x`
x <- c("a", "a", "b", "b", "b", "c")

#Uso da função table
table(x)

# Escreva uma linha de código para mostrar o número de estados por região
table(murders$region)

# Acesse a variável `state` e armazene-a em um objeto
states <- murders$state

# Classifique o objeto em ordem alfabética e redefina o objeto
states <- sort(states)

# Informa o primeiro valor alfabético
states[1]

# Acesse os valores da população do conjunto de dados e armazene-os no pop
pop <- murders$population

# Classifique o objeto e salve-o no mesmo objeto
pop <- sort(pop)

# Informa o menor tamanho da população
min(murders$population)
i_min <- which.min(murders$population)
i_min
murders$population[i_min]

# Acesse a população do conjunto de dados e armazene-a no pop
pop <- murders$population
pop

# Use o comando order para encontrar o vetor de índices que ordenam pop e armazenam no objeto ord
ord <- order(pop)
pop

# Encontre o número do índice da entrada com o menor tamanho de população
min(murders$population)
i_min <- which.min(murders$population)
i_min

# Encontre o índice do menor valor para a variável total
which.min(murders$total)

# Encontre o índice do menor valor para a população
which.min(murders$population)

# Defina a variável i como o índice do menor estado
i <- which.min(murders$population)

# Definir estados de variáveis para manter os estados
states <- murders$state

# Use o índice que você acabou de definir para encontrar o estado com a menor população
states[i]

# Defina uma variável state para ser o nome do estado do quadro de dados de assassinatos
states <- murders$state

# Defina uma classificação variável para determinar as classificações do tamanho da população
ranks <- rank(murders$population)

# Defina uma variável ind para armazenar os índices necessários para ordenar os valores da população
ind <- order(murders$population)

# Crie um quadro de dados my_df com o nome do estado e sua classificação e ordenado do menos populoso ao mais
my_df <- data.frame(states = states[ind], ranks = ranks[ind])

# Usando o novo conjunto de dados
library(dslabs)
data(na_example)

# Verificando a estrutura
str(na_example)

# Descubra a média de todo o conjunto de dados
mean(na_example)

# Use is.na para criar um índice lógico ind que informa quais entradas são NA
ind <- is.na(na_example)

# Determine quantos NA ind tem usando a função sum
sum(ind)

# Armazena a taxa de homicídios por 100.000 para cada estado em taxa_de_assassinato
murder_rate <- murders$total / murders$population * 100000

# Calcule a taxa média de homicídios nos EUA
mean(murder_rate)

# Armazene `murder_rate < 1` em `low`
low <- murder_rate < 1
low

# Obtém os índices das entradas que estão abaixo de 1
which(low)

# Nomes de estados com taxas de homicídio inferiores a 1
murders$state[low]

# Crie um vetor ind para estados do Nordeste e com taxas de homicídios menores que 1.
ind <- low & murders$region=="Northeast"

# Nomes dos estados em `ind`
murders$state[ind]

# Calcule a taxa média de homicídios usando `mean` e armazene-a no objeto chamado `avg`
avg <-mean(murder_rate)

# Quantos estados têm taxas de homicídio abaixo da média? Verifique usando a soma
sum(murder_rate < avg)

# Armazene as 3 abreviações em um vetor chamado `abbs` (lembre-se que são vetores de caracteres e precisam de aspas)
abbs <- c("AK", "MI", "IA")

# Combine os abbs com os assassinatos$abb e armazene em `ind`
ind <- match(abbs , murders$abb)

# Imprime os nomes dos estados de `ind`
murders$state[ind]

# Armazene as 5 abreviações em `abbs`. (lembre-se que são vetores de caracteres)
abbs <- c("MA", "ME", "MI", "MO", "MU")
# Use o comando %in% para verificar se as entradas de abbs são abreviaturas no frame de dados de assassinatos
abbs%in%murders$abb

# Use o comando `which` e o operador `!` para descobrir quais abreviações de índice não fazem parte do conjunto de dados e armazene em `ind`
ind <- which(!abbs%in%murders$abb)

# Identifique abreviações de `abbs` que estão em `ind`
abbs[ind]

# Carregar dplyr
library(dplyr)

# Redefinir assassinatos para incluir uma coluna denominada taxa com as taxas de homicídio por 100.000
murders <- mutate(murders, rate = (murders$total/murders$population)*100000)

# Note que se você quiser ranks do mais alto para o mais baixo você pode pegar o negativo e então calcular os ranks
x <- c(88, 100, 83, 92, 94)
rank(-x)

#Defina a taxa
rate <-  murders$total/ murders$population * 100000

# Redefinir assassinatos para incluir uma coluna chamada classificação com as classificações de taxa do maior para o menor
murders <- mutate(murders, rank =rank(-rate))

# Use select para mostrar apenas nomes de estado e abreviações de assassinatos
select(murders, state, abb)

# Adicione as colunas necessárias
murders <- mutate(murders, rate = total/population * 100000, rank = rank(-rate))

# Filtre para mostrar os 5 principais estados com as maiores taxas de homicídio
filter(murders, rank <= 5)

# Use o filtro para criar um novo quadro de dados no_south
no_south <- filter(murders, region != "South" )

# Número de estados (linhas) nesta categoria
nrow(no_south)

# Crie um novo quadro de dados chamado assassinatos_nw apenas com os estados do nordeste e do oeste
murders_nw <- filter(murders, region %in% c("Northeast", "West"))

# Número de estados (linhas) nesta categoria
nrow(murders_nw)

# Crie uma tabela, chame-a de `my_states`, que satisfaça ambas as condições
my_states <- filter(murders, region %in% c("Northeast", "West") & rate < 1)

# Use select para mostrar apenas o nome do estado, a taxa de homicídios e a classificação
select(my_states, state, rate, rank)

# mostra o resultado e inclui apenas as colunas de estado, taxa e classificação, tudo em uma linha, nessa ordem
filter(murders, region %in% c("Northeast", "West") & rate < 1) %>%  
   select(state, rate, rank)
   
# Crie um novo quadro de dados chamado my_states (com especificações nas instruções)
my_states <- murders %>% 
    mutate(rate =  total / population * 100000, rank = rank(-rate)) %>%
    filter(region %in% c("Northeast", "West") & rate < 1) %>%
    select(state, rate, rank)
    
 # Carregue os conjuntos de dados e defina algumas variáveis
library(dslabs)
data(murders)

population_in_millions <- murders$population/10^6
total_gun_murders <- murders$total

plot(population_in_millions, total_gun_murders)

# Transforme a população (não a população em milhões) usando a transformação log10 e salve no objeto log10_population
log10_population <- log(murders$population,10)

# Transforme o total de assassinatos com armas usando a transformação log10 e salve no objeto log10_total_gun_murders
log10_total_gun_murders <- log(total_gun_murders,10)

# Crie um gráfico de dispersão com a população e assassinatos transformados em escala logarítmica
plot(log10_population,log10_total_gun_murders)

# Armazena a população em milhões e salva empopulation_in_millions
population_in_millions <- murders$population/10^6

# Crie um histograma desta variável
hist(population_in_millions)

# Crie um boxplot das populações do estado por região para o conjunto de dados de assassinatos
state <- murders$state
population <- murders$population
boxplot(population  ~ region, data = murders)

# Atribua a abreviação do estado quando o nome do estado tiver mais de 8 caracteres
new_names <- ifelse(nchar(murders$state)>8, murders$abb, murders$state)
